# Required Libraries
library(DBI)          # For database connections
library(odbc)         # For SQL connections
library(readxl)       # For reading Excel files
library(dplyr)        # For data manipulation

# Establish a database connection (Update with your connection details)
con <- dbConnect(odbc::odbc(), 
                 Driver = "your_driver_name", 
                 Server = "your_server_name", 
                 Database = "your_database_name", 
                 UID = "your_username", 
                 PWD = "your_password", 
                 Port = "your_port")

# Load the Excel file (update with your file path)
excel_path <- "path_to_your_excel_file.xlsx"
table_column_data <- read_excel(excel_path)

# Loop through the table-column data to fetch details from the database
output_list <- list()

for (i in 1:nrow(table_column_data)) {
  
  table_name <- table_column_data$Table[i]  # Fetch the table name
  column_name <- table_column_data$Column[i]  # Fetch the column name
  
  # Fetch the first 5 rows and distinct values of the column from the table
  query <- paste0("SELECT DISTINCT ", column_name, " FROM ", table_name, " LIMIT 5")
  
  # Execute the query to fetch data
  result <- dbGetQuery(con, query)
  
  # Case-insensitive handling of column name by normalizing both query result and column name
  colnames(result) <- tolower(colnames(result))
  column_name <- tolower(column_name)
  
  # Collect distinct values and a 5-sample of the column
  distinct_values <- unique(result[[column_name]])
  sample_values <- sample(result[[column_name]], 5, replace = TRUE)
  
  # Create the output list for the current column
  output_list[[paste(table_name, column_name, sep = "_")]] <- list(
    "Distinct Values" = distinct_values,
    "Sample Values" = sample_values
  )
}

# Display or store the output
output_list

# Close the connection
dbDisconnect(con)
